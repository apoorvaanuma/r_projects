DerrickRose_PTS <- c(597,597,597,1361,1619,2026,852,0,159,904)
DwayneWade_PTS <- c(2040,1397,1254,2386,2045,1941,1082,1463,1028,1331)
#Matrix
Points <- rbind(KobeBryant_PTS, JoeJohnson_PTS, LeBronJames_PTS, CarmeloAnthony_PTS, DwightHoward_PTS, ChrisBosh_PTS, ChrisPaul_PTS, KevinDurant_PTS, DerrickRose_PTS, DwayneWade_PTS)
rm(KobeBryant_PTS, JoeJohnson_PTS, LeBronJames_PTS, CarmeloAnthony_PTS, DwightHoward_PTS, ChrisBosh_PTS, ChrisPaul_PTS, KevinDurant_PTS, DerrickRose_PTS, DwayneWade_PTS)
colnames(Points) <- Seasons
rownames(Points) <- Players
salary
Salary
Salary[,5]
Salary[,5]
Salary
Games
Minutes
data<- 1:50
A<- matrix(data=data,5,10)
data<- 1:50
A<- matrix(data=data,5,10)
A
A<- cbend(data=data,5,10)
A<- matrix(data=data,5,10)
A[5,9]
B<-matrix(data=data,5,10,byrow=T)
B
c<-rbind(r1,r2,r3)
r1<- c(1:6)
r2<- c(7:12)
r3<- c(13:18)
c<-rbind(r1,r2,r3)
c
d<-cbind(r1,r2,r3)
d
Sasi<- 1:8
Sasi
names(Sasi)
names(Sasi) <- c("a","b","c")
Sasi
names(Appu) <- c("a","b","c")
Appu
names(Appu) <- c("a","b","c")
#to clear assigned name
names(Appu)<- NULL
Appu
rep(c("1","2","3"),4)
rep(c("1","2","3"),each = 4) # repeats each element 4 times
abc<- matrix(temp,3,4)
temp<- rep(c("1","2","3"),each = 4) # repeats each element 4 times
abc<- matrix(temp,3,4)
abc
rownames(abc)<- c("a","b","c")
abc
temp<- rep(c("1","2","3"),each = 4) # repeats each element 4 times
abc<- matrix(temp,3,4)
abc
rownames(abc)<- c("a","b","c")
abc
colnames(abc)<- c("d","e","f","g")
abc
abc[3,4]<-0
abc
Salary
Salary(3,8)
Salary
Salary(3,8)
Salary[3,8]
Salary[LeBronJames,2012]
Salary
Salary[LeBronJames,2012]
Salary
Salary["LeBronJames","2012"]
round(FieldGoals/Games,2)
a<-round(FieldGoals/Games,2)
a
Goalspergame
Goalspergame<-round(FieldGoals/Games,2)
Goalspergame
Goalspergame[ChrisPaul,2012]
Goalspergame["ChrisPaul","2012"]
t(Games)
Games
x
x<-1:5
x
x[1,4]
x[c(1,4)]
x[3]
Games[1:3,6:10]
Games[,c(1,9)]
Games[c(1,8),]
is.matrix(Games[c(1,8),])
Games[1,,drop=F]
?matplot
?matplot
(b)
b<-Games[1,,drop=F]
matplot(t(b), type = "p", pch = 15:17, col=c(1:4),6))
matplot(t(b), type = "p", pch = 15:17, col=c(1:4),6)
b<-MinutesPlayed[1,,drop=F]
matplot(t(b), type = "p", pch = 15:17, col=c(1:4),6)
b<-MinutesPlayed[1,,drop=F]
matplot(t(b), type = "p", pch = 15:18, col=c(1:4),6)
b<-MinutesPlayed[1,,drop=F]
b
matplot(t(b), type = "b", pch = 15:18, col=c(1:4,6)
matplot(t(b), type = "b", pch = 15:18, col=c(1:4,6))
b<-MinutesPlayed[1,,drop=F]
b
matplot(t(b), type = "b", pch = 15:18, col=c(1:4,6))
b<-MinutesPlayed[1,,drop=F]
b
matplot(t(b), type = "b", pch = 15:18, col=c(1:4,6))
legend("bottomleft", inset =0.01, legend=Players[1],col=c(1:4,6),pch=12:18,horiz = F)
myplot<-function(){
b<-MinutesPlayed[4,,drop=F]
b
matplot(t(b), type = "b", pch = 15:18, col=c(1:4,6))
legend("bottomleft", inset =0.01, legend=Players[4],col=c(1:4,6),pch=12:18,horiz = F)
}
myplot()
myplot<-function(rows){
b<-MinutesPlayed[rows,,drop=F]
b
matplot(t(b), type = "b", pch = 15:18, col=c(1:4,6))
legend("bottomleft", inset =0.01, legend=Players[rows],col=c(1:4,6),pch=12:18,horiz = F)
}
myplot(1:10)
myplot<-function(data,rows){
b<-data[rows,,drop=F]
b
matplot(t(b), type = "b", pch = 15:18, col=c(1:4,6))
legend("bottomleft", inset =0.01, legend=Players[rows],col=c(1:4,6),pch=12:18,horiz = F)
}
myplot(Salary,1:10)
myplot(Salary)
myplot<-function(data,rows){
b<-data[rows,,drop=F]
b
matplot(t(b), type = "b", pch = 15:18, col=c(1:4,6))
legend("bottomleft", inset =0.01, legend=Players[rows],col=c(1:4,6),pch=12:18,horiz = F)
}
myplot(Salary)
myplot(Salary,1:10)
myplot<-function(data,rows){
b<-data[rows,,drop=F]
b
matplot(t(b), type = "b", pch = 15:18, col=c(1:4,6))
legend("bottomleft", inset =0.01, legend=Players[rows],col=c(1:4,6),pch=12:18,horiz = F)
}
myplot(Salary,1:10)
myplot(Salary,1:10)
myplot(Salary,1:10) # data table name and numbers of rows we want in visualization, can skip that if want to include all rows
myplot<-function(data,rows){
b<-data[rows,,drop=F]
b
matplot(t(b), type = "b", pch = 15:18, col=c(1:4,6))
legend("bottomleft", inset =0.01, legend=Players[rows],col=c(1:4,6),pch=12:18,horiz = F)
}
myplot(Salary,1:10) # data table name and numbers of rows we want in visualization, can skip that if want to include all rows
#Dear Student,
#
#Welcome to the world of Basketball Data!
#I'm sure you will enjoy this section of the R Programming course.
#
#Instructions for this dataset:
# Simply select ALL the lines in this script by pressing
# CTRL+A on Windows or CMND+A on a Mac and execute them
# Once you have executed the commands the following objects
# will be created:
# Matrices:
# - FieldGoalAttempts
# - FieldGoals
# - Games
# - MinutesPlayed
# - Salary
# Vectors:
# - Players
# - Seasons
#We will go understand these inside the course.
#
#Sincerely,
#Kirill Eremenko
#www.superdatascience.com
#Copyright: These datasets were prepared using publicly available data.
#           However, theses scripts are subject to Copyright Laws.
#           If you wish to use these R scripts outside of the R Programming Course
#           by Kirill Eremenko, you may do so by referencing www.superdatascience.com in your work.
#Comments:
#Seasons are labeled based on the first year in the season
#E.g. the 2012-2013 season is preseneted as simply 2012
#Notes and Corrections to the data:
#Kevin Durant: 2006 - College Data Used
#Kevin Durant: 2005 - Proxied With 2006 Data
#Derrick Rose: 2012 - Did Not Play
#Derrick Rose: 2007 - College Data Used
#Derrick Rose: 2006 - Proxied With 2007 Data
#Derrick Rose: 2005 - Proxied With 2007 Data
#Seasons
Seasons <- c("2005","2006","2007","2008","2009","2010","2011","2012","2013","2014")
#Players
Players <- c("KobeBryant","JoeJohnson","LeBronJames","CarmeloAnthony","DwightHoward","ChrisBosh","ChrisPaul","KevinDurant","DerrickRose","DwayneWade")
#Salaries
KobeBryant_Salary <- c(15946875,17718750,19490625,21262500,23034375,24806250,25244493,27849149,30453805,23500000)
JoeJohnson_Salary <- c(12000000,12744189,13488377,14232567,14976754,16324500,18038573,19752645,21466718,23180790)
LeBronJames_Salary <- c(4621800,5828090,13041250,14410581,15779912,14500000,16022500,17545000,19067500,20644400)
CarmeloAnthony_Salary <- c(3713640,4694041,13041250,14410581,15779912,17149243,18518574,19450000,22407474,22458000)
DwightHoward_Salary <- c(4493160,4806720,6061274,13758000,15202590,16647180,18091770,19536360,20513178,21436271)
ChrisBosh_Salary <- c(3348000,4235220,12455000,14410581,15779912,14500000,16022500,17545000,19067500,20644400)
ChrisPaul_Salary <- c(3144240,3380160,3615960,4574189,13520500,14940153,16359805,17779458,18668431,20068563)
KevinDurant_Salary <- c(0,0,4171200,4484040,4796880,6053663,15506632,16669630,17832627,18995624)
DerrickRose_Salary <- c(0,0,0,4822800,5184480,5546160,6993708,16402500,17632688,18862875)
DwayneWade_Salary <- c(3031920,3841443,13041250,14410581,15779912,14200000,15691000,17182000,18673000,15000000)
#Matrix
Salary <- rbind(KobeBryant_Salary, JoeJohnson_Salary, LeBronJames_Salary, CarmeloAnthony_Salary, DwightHoward_Salary, ChrisBosh_Salary, ChrisPaul_Salary, KevinDurant_Salary, DerrickRose_Salary, DwayneWade_Salary)
rm(KobeBryant_Salary, JoeJohnson_Salary, CarmeloAnthony_Salary, DwightHoward_Salary, ChrisBosh_Salary, LeBronJames_Salary, ChrisPaul_Salary, DerrickRose_Salary, DwayneWade_Salary, KevinDurant_Salary)
colnames(Salary) <- Seasons
rownames(Salary) <- Players
#Games
KobeBryant_G <- c(80,77,82,82,73,82,58,78,6,35)
JoeJohnson_G <- c(82,57,82,79,76,72,60,72,79,80)
LeBronJames_G <- c(79,78,75,81,76,79,62,76,77,69)
CarmeloAnthony_G <- c(80,65,77,66,69,77,55,67,77,40)
DwightHoward_G <- c(82,82,82,79,82,78,54,76,71,41)
ChrisBosh_G <- c(70,69,67,77,70,77,57,74,79,44)
ChrisPaul_G <- c(78,64,80,78,45,80,60,70,62,82)
KevinDurant_G <- c(35,35,80,74,82,78,66,81,81,27)
DerrickRose_G <- c(40,40,40,81,78,81,39,0,10,51)
DwayneWade_G <- c(75,51,51,79,77,76,49,69,54,62)
#Matrix
Games <- rbind(KobeBryant_G, JoeJohnson_G, LeBronJames_G, CarmeloAnthony_G, DwightHoward_G, ChrisBosh_G, ChrisPaul_G, KevinDurant_G, DerrickRose_G, DwayneWade_G)
rm(KobeBryant_G, JoeJohnson_G, CarmeloAnthony_G, DwightHoward_G, ChrisBosh_G, LeBronJames_G, ChrisPaul_G, DerrickRose_G, DwayneWade_G, KevinDurant_G)
colnames(Games) <- Seasons
rownames(Games) <- Players
#Minutes Played
KobeBryant_MP <- c(3277,3140,3192,2960,2835,2779,2232,3013,177,1207)
JoeJohnson_MP <- c(3340,2359,3343,3124,2886,2554,2127,2642,2575,2791)
LeBronJames_MP <- c(3361,3190,3027,3054,2966,3063,2326,2877,2902,2493)
CarmeloAnthony_MP <- c(2941,2486,2806,2277,2634,2751,1876,2482,2982,1428)
DwightHoward_MP <- c(3021,3023,3088,2821,2843,2935,2070,2722,2396,1223)
ChrisBosh_MP <- c(2751,2658,2425,2928,2526,2795,2007,2454,2531,1556)
ChrisPaul_MP <- c(2808,2353,3006,3002,1712,2880,2181,2335,2171,2857)
KevinDurant_MP <- c(1255,1255,2768,2885,3239,3038,2546,3119,3122,913)
DerrickRose_MP <- c(1168,1168,1168,3000,2871,3026,1375,0,311,1530)
DwayneWade_MP <- c(2892,1931,1954,3048,2792,2823,1625,2391,1775,1971)
#Matrix
MinutesPlayed <- rbind(KobeBryant_MP, JoeJohnson_MP, LeBronJames_MP, CarmeloAnthony_MP, DwightHoward_MP, ChrisBosh_MP, ChrisPaul_MP, KevinDurant_MP, DerrickRose_MP, DwayneWade_MP)
rm(KobeBryant_MP, JoeJohnson_MP, CarmeloAnthony_MP, DwightHoward_MP, ChrisBosh_MP, LeBronJames_MP, ChrisPaul_MP, DerrickRose_MP, DwayneWade_MP, KevinDurant_MP)
colnames(MinutesPlayed) <- Seasons
rownames(MinutesPlayed) <- Players
#Field Goals
KobeBryant_FG <- c(978,813,775,800,716,740,574,738,31,266)
JoeJohnson_FG <- c(632,536,647,620,635,514,423,445,462,446)
LeBronJames_FG <- c(875,772,794,789,768,758,621,765,767,624)
CarmeloAnthony_FG <- c(756,691,728,535,688,684,441,669,743,358)
DwightHoward_FG <- c(468,526,583,560,510,619,416,470,473,251)
ChrisBosh_FG <- c(549,543,507,615,600,524,393,485,492,343)
ChrisPaul_FG <- c(407,381,630,631,314,430,425,412,406,568)
KevinDurant_FG <- c(306,306,587,661,794,711,643,731,849,238)
DerrickRose_FG <- c(208,208,208,574,672,711,302,0,58,338)
DwayneWade_FG <- c(699,472,439,854,719,692,416,569,415,509)
#Matrix
FieldGoals <- rbind(KobeBryant_FG, JoeJohnson_FG, LeBronJames_FG, CarmeloAnthony_FG, DwightHoward_FG, ChrisBosh_FG, ChrisPaul_FG, KevinDurant_FG, DerrickRose_FG, DwayneWade_FG)
rm(KobeBryant_FG, JoeJohnson_FG, LeBronJames_FG, CarmeloAnthony_FG, DwightHoward_FG, ChrisBosh_FG, ChrisPaul_FG, KevinDurant_FG, DerrickRose_FG, DwayneWade_FG)
colnames(FieldGoals) <- Seasons
rownames(FieldGoals) <- Players
#Field Goal Attempts
KobeBryant_FGA <- c(2173,1757,1690,1712,1569,1639,1336,1595,73,713)
JoeJohnson_FGA <- c(1395,1139,1497,1420,1386,1161,931,1052,1018,1025)
LeBronJames_FGA <- c(1823,1621,1642,1613,1528,1485,1169,1354,1353,1279)
CarmeloAnthony_FGA <- c(1572,1453,1481,1207,1502,1503,1025,1489,1643,806)
DwightHoward_FGA <- c(881,873,974,979,834,1044,726,813,800,423)
ChrisBosh_FGA <- c(1087,1094,1027,1263,1158,1056,807,907,953,745)
ChrisPaul_FGA <- c(947,871,1291,1255,637,928,890,856,870,1170)
KevinDurant_FGA <- c(647,647,1366,1390,1668,1538,1297,1433,1688,467)
DerrickRose_FGA <- c(436,436,436,1208,1373,1597,695,0,164,835)
DwayneWade_FGA <- c(1413,962,937,1739,1511,1384,837,1093,761,1084)
#Matrix
FieldGoalAttempts <- rbind(KobeBryant_FGA, JoeJohnson_FGA, LeBronJames_FGA, CarmeloAnthony_FGA, DwightHoward_FGA, ChrisBosh_FGA, ChrisPaul_FGA, KevinDurant_FGA, DerrickRose_FGA, DwayneWade_FGA)
rm(KobeBryant_FGA, JoeJohnson_FGA, LeBronJames_FGA, CarmeloAnthony_FGA, DwightHoward_FGA, ChrisBosh_FGA, ChrisPaul_FGA, KevinDurant_FGA, DerrickRose_FGA, DwayneWade_FGA)
colnames(FieldGoalAttempts) <- Seasons
rownames(FieldGoalAttempts) <- Players
#Points
KobeBryant_PTS <- c(2832,2430,2323,2201,1970,2078,1616,2133,83,782)
JoeJohnson_PTS <- c(1653,1426,1779,1688,1619,1312,1129,1170,1245,1154)
LeBronJames_PTS <- c(2478,2132,2250,2304,2258,2111,1683,2036,2089,1743)
CarmeloAnthony_PTS <- c(2122,1881,1978,1504,1943,1970,1245,1920,2112,966)
DwightHoward_PTS <- c(1292,1443,1695,1624,1503,1784,1113,1296,1297,646)
ChrisBosh_PTS <- c(1572,1561,1496,1746,1678,1438,1025,1232,1281,928)
ChrisPaul_PTS <- c(1258,1104,1684,1781,841,1268,1189,1186,1185,1564)
KevinDurant_PTS <- c(903,903,1624,1871,2472,2161,1850,2280,2593,686)
DerrickRose_PTS <- c(597,597,597,1361,1619,2026,852,0,159,904)
DwayneWade_PTS <- c(2040,1397,1254,2386,2045,1941,1082,1463,1028,1331)
#Matrix
Points <- rbind(KobeBryant_PTS, JoeJohnson_PTS, LeBronJames_PTS, CarmeloAnthony_PTS, DwightHoward_PTS, ChrisBosh_PTS, ChrisPaul_PTS, KevinDurant_PTS, DerrickRose_PTS, DwayneWade_PTS)
rm(KobeBryant_PTS, JoeJohnson_PTS, LeBronJames_PTS, CarmeloAnthony_PTS, DwightHoward_PTS, ChrisBosh_PTS, ChrisPaul_PTS, KevinDurant_PTS, DerrickRose_PTS, DwayneWade_PTS)
colnames(Points) <- Seasons
rownames(Points) <- Players
myplot(Salary,1:10)
Covid<- read.csv("D:\Data Analyst\sample data sets\r_projects\Covid 19 Data\COVID19_line_list_data.csv")
Covid<- read.csv("D:\\Data Analyst\\sample data sets\\r_projects\\Covid 19 Data\\COVID19_line_list_data.csv")
library(Hmisc)
install.packages(Hmisc)
install.packages(Hmisc)
install.packages("Hmisc")
library(Hmisc)
describe(Covid)
Covid$death_dummy <- as.integer((Covid$death = !0))
unique(Covid$death_dummy)
Percent_died <- sum(Covid$death_dummy)/ nrow(Covid)
Percent_died <- (sum(Covid$death_dummy)/ nrow(Covid))*100
Percent_died
Percent_died <- (sum(Covid$death_dummy)/ nrow(Covid))
Percent_died
Covid$death_dummy <- as.integer((Covid$death = 0))
unique(Covid$death_dummy)
Covid$death_dummy <- as.integer((Covid$death != 0))
unique(Covid$death_dummy)
Covid$death_dummy <- as.integer((Covid$death != 0))
unique(Covid$death_dummy)
Percent_died <- (sum(Covid$death_dummy)/ nrow(Covid))
Percent_died
dead <- subset(Covid, death_dummy==1)
alive <- subset(Covid, death_dummy == 0)
mean(dead$age)
mean(alive$age)
mean(dead$age, na.rm= TRUE)
mean(alive$age, na.rm= TRUE )
t.test(alive$age, dead$age, alternative = "two-sided", conf.level = 0.95)
t.test(alive$age, dead$age, alternative = "two.sided", conf.level = 0.95)
men <- subset(Covid, gender == "Male")
women <- subset(Covid, gender == "Female")
mean(men$death_dummy, na.rm= TRUE)
mean(women$death_dummy, na.rm= TRUE )
t.test(men$death_dummy, women$death_dummy, alternative = "two.sided", conf.level = 0.95)
getwd()
setwd("D:\\Data Analyst\\sample data sets\\r_projects\\Movie ratings")
getwd()
movies<- read.csv("Movie-Ratings.csv")
movies<- read.csv("Movie-Ratings.csv")
head(movies)
head(movies)
colnames(movies)<- c("Film", "Genre", "CriticRatings", "AudienceRating", "Budget", "Year")
head(movies)
str(movies)
summary(movies)
movies$Year <- factor(movies$Year)
movies$Year
str(movies)
levels(movies$Year)
library(ggplot2)
plot <- ggplot(data=movies, aes(x=CriticRatings, y= AudienceRating))
plot
plot <- ggplot(data=movies, aes(x=CriticRatings, y= AudienceRating)) + geom_point()
plot
plot <- ggplot(data=movies, aes(x=CriticRatings, y= AudienceRating), colour= Genre, size = Budget) + geom_point()
plot
plot
plot <- ggplot(data=movies, aes(x=CriticRatings, y= AudienceRating, colour= Genre, size = Budget)) + geom_point()
plot
View(plot)
plot <- ggplot(data=movies, aes(x=CriticRatings, y= AudienceRating, colour= Genre, size = Budget))
plot
plot+ geom_point()
plot+ geom_line()+ geom_point()
plot + geom_point(aes(size = CriticalRating))
plot <- ggplot(data=movies, aes(x=CriticRatings, y= AudienceRating, colour= Genre, size = Budget))
plot
plot + geom_point(aes(size = CriticalRating))
plot + geom_point(aes(size = CriticRatings))
plot+geom_point(aes(x=Budget))
plot+ geom_line(size=1)+ geom_point()
plot+ geom_point(aes(x=Budget))+xlab("Budget $$$")
plot+geom_point(aes(colour=Genre))
plot+ geom_point(colour= "Dark Blue")
plot+geom_point(aes(size=Budget))
plot+geom_point(size=10)
plot+geom_point(size=7) # Set
plot+geom_point(size=2) # Set
plot <- ggplot(data=movies, aes(x=CriticRatings, y= AudienceRating))
plot+geom_histogram(binwidth = 10)
plot <- ggplot(data=movies, aes(x=Budget))
plot+geom_histogram(binwidth = 10)
plot+geom_histogram(binwidth = 3)
plot+geom_histogram(binwidth = 1)
plot+geom_histogram(binwidth = 2)
plot+geom_histogram(binwidth = 2, aes(fill=Genre))
plot+geom_histogram(binwidth = 2, aes(fill=Genre), colour= "Black") # add colour
plot+geom_histogram(binwidth = 2, aes(fill=Genre), colour= "Black") # add colour and border
plot+geom_density(aes(fill=Genre))
plot+geom_density(aes(fill=Genre), position = "stack")
t<- ggplot(data=movies, aes(x=AudienceRating))
t+geom_histogram(bandwidth=10, fill= "White", colour="Blue")
t+geom_histogram(binwidth = =10, fill= "White", colour="Blue")
t+geom_histogram(binwidth =10, fill= "White", colour="Blue")
t+geom_histogram(binwidth =10, fill= "White", aes(x=CriticRating), colour="Blue")
t+geom_histogram(binwidth =10, fill= "White", aes(x=CriticsRating), colour="Blue")
t+geom_histogram(binwidth =10, fill= "White", aes(x=CriticRatings), colour="Blue")
t <- ggplot()
t
z<- ggplot(data=movies, aes(x=CriticRatings, y=AudienceRatings, colour= Genre))
z+geom_point()+geom_smooth(fill=NA)
z<- ggplot(data=movies, aes(x=CriticRatings, y=AudienceRating, colour= Genre))
z+geom_point()+geom_smooth(fill=NA)
z+geom_point()+geom_smooth(fill=2)
z+geom_point()+geom_smooth(fill=1)
z+geom_point()+geom_smooth(fill=NA)
z+geom_boxplot()
z+geom_boxplot(size=1.2)
z+geom_boxplot(size=1.2)+geom_point()
z+geom_boxplot(size=1.2)+geom_jitter()
z+geom_boxplot(size=1.2)+geom_jitter()
z <- geom_jitter()+ geom_boxplot(size=1.2, alpha=0.5)
z + geom_jitter()+ geom_boxplot(size=1.2, alpha=0.5)
z + geom_jitter()+ geom_boxplot(size=1.2, alpha=1)
z + geom_jitter()+ geom_boxplot(size=1.2, alpha=0.1)
a<- ggplot(data=movies, aes(x=Budget))
a+geom_histogram(bandwidth=10,aes(fill=Genre), colour="Black")
a+geom_histogram(bandwidth=10,aes(fill=Genre), colour="Black") + facet_grid(Genre~.)
a+geom_histogram(binwidth =10,aes(fill=Genre), colour="Black") + facet_grid(Genre~.)
a+geom_histogram(binwidth =10,aes(fill=Genre), colour="Black") + facet_grid(Genre~., scales="free")
a+geom_histogram(binwidth =10,aes(fill=Genre), colour="Black") + facet_grid(Budget~., scales="free")
a+geom_histogram(binwidth =10,aes(fill=Genre), colour="Black") + facet_grid(Year~., scales="free")
b<- ggplot(data=movies, aes(x=CriticRatings, y=AudienceRating, colour= Genre))
b+geom_point(size=3)
b+geom_point(size=3)+facet_grid(Genre~)
b+geom_point(size=3)+ facet_grid(Genre~.)
b+geom_point(size=3) + facet_grid(.~Year)
b+geom_point(size=3) + facet_grid(Genre~Year)
b+geom_point(size=3) + geom_smooth()+ facet_grid(Genre~Year)
b+geom_point(aes(size=Budget)) + geom_smooth()+ facet_grid(Genre~Year)
c<- ggplot(data=movies, aes(x=CriticRatings, y=AudienceRating, colour= Genre, size=Budget))
c+geom_point()
c+ geom_point() + xlim(50,100) +ylim(50,100)
d <- ggplot(data=movies, aes(x=Budget))
d+ geom_histogram(binwidth = 10, aes(fill=Genre), colour = "Black")
d+ geom_histogram(binwidth = 10, aes(fill=Genre), colour = "Black") + ylim(0,100)
d+ geom_histogram(binwidth = 10, aes(fill=Genre), colour = "Black") + coord_cartesian(ylim=c(0,50))
b+geom_point(aes(size=Budget)) + geom_smooth()+ facet_grid(Genre~Year)
b+geom_point(aes(size=Budget)) + geom_smooth()+ facet_grid(Genre~Year) + coord_cartesian(ylim=c(0,50))
b+geom_point(aes(size=Budget)) + geom_smooth()+ facet_grid(Genre~Year) + coord_cartesian(ylim=c(0,100))
e<- ggplot(data=movies, aes(x=Budget))
e+geom_histogram(binwidth=10, aes(fill=Genre), colour="Black")
hist<-e+geom_histogram(binwidth=10, aes(fill=Genre), colour="Black")
hist
hist+xlab("Money")+ylab("No.of Movies")
hist+xlab("Money")+ylab("No.of Movies") + theme (axis.title.x = element_text (colour="DarkGreen", size=30)
,axis.title.y=element_text(colour="Red", size=30))
hist+xlab("Money")+ylab("No.of Movies") + theme (axis.title.x = element_text (colour="DarkGreen", size=30)
,axis.title.y=element_text(colour="Red", size=30),
axis.text.x= element_text(size=20),
axis.text.y= element_text(size=20))
hist+xlab("Money")+ylab("No.of Movies") + theme (axis.title.x = element_text (colour="DarkGreen", size=30)
,axis.title.y=element_text(colour="Red", size=30),
axis.text.x= element_text(size=20),
axis.text.y= element_text(size=20),
legend.title=element_text(size=30),
legend.text=element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1))
hist+xlab("Money")+ylab("No.of Movies") +
ggtitle("Movie Budget Dist") +
theme (axis.title.x = element_text (colour="DarkGreen", size=30)
,axis.title.y=element_text(colour="Red", size=30),
axis.text.x= element_text(size=20),
axis.text.y= element_text(size=20),
legend.title=element_text(size=30),
legend.text=element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1))
hist+xlab("Money")+ylab("No.of Movies") +
ggtitle("Movie Budget Dist",size =30) +
theme (axis.title.x = element_text (colour="DarkGreen", size=30)
,axis.title.y=element_text(colour="Red", size=30),
axis.text.x= element_text(size=20),
axis.text.y= element_text(size=20),
legend.title=element_text(size=30),
legend.text=element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1))
hist+xlab("Money")+ylab("No.of Movies") +
ggtitle("Movie Budget Dist") +
theme (axis.title.x = element_text (colour="DarkGreen", size=30)
,axis.title.y=element_text(colour="Red", size=30),
axis.text.x= element_text(size=20),
axis.text.y= element_text(size=20),
legend.title=element_text(size=30),
legend.text=element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(colour="DarkBlue"), size =40, family = "Courier")
hist+xlab("Money")+ylab("No.of Movies") +
ggtitle("Movie Budget Dist") +
theme (axis.title.x = element_text (colour="DarkGreen", size=30)
,axis.title.y=element_text(colour="Red", size=30),
axis.text.x= element_text(size=20),
axis.text.y= element_text(size=20),
legend.title=element_text(size=30),
legend.text=element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(colour="DarkBlue"), size =40, family = "Courier"))
hist+xlab("Money")+ylab("No.of Movies") +
ggtitle("Movie Budget Dist") +
theme (axis.title.x = element_text (colour="DarkGreen", size=30)
,axis.title.y=element_text(colour="Red", size=30),
axis.text.x= element_text(size=20),
axis.text.y= element_text(size=20),
legend.title=element_text(size=30),
legend.text=element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(colour="DarkBlue",
size =40, family = "Courier"))
